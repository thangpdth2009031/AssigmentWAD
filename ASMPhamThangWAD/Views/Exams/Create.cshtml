@model ASMPhamThangWAD.Models.Exam

@{
    ViewBag.Title = "Create";
}
@{
    var items = new SelectList(new[]
                    {
                       new SelectListItem {Text = "Core Java", Value = "Core Java"},
                       new SelectListItem {Text = "Advance Java", Value = "Advance Java"},
                       new SelectListItem {Text = "Progaming C#", Value = "Progaming C#"},
                   }, "Text", "Value");
    var classRooms = new SelectList(new[]
                    {
                       new SelectListItem {Text = "B10", Value = "B10"},
                       new SelectListItem {Text = "B16", Value = "B16"},
                       new SelectListItem {Text = "B14", Value = "B14"},
                   }, "Text", "Value");
    var facultys = new SelectList(new[]
                    {
                       new SelectListItem {Text = "Jayalakshmi", Value = "Jayalakshmi"},
                       new SelectListItem {Text = "John Carter", Value = "John Carter"},
                       new SelectListItem {Text = "HienPA", Value = "HienPA"},
                   }, "Text", "Value");
}
<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Exam</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Exam Subject", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ExamSubject, @items, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExamSubject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExamDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExamDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExamDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExamDuration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExamDuration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExamDuration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassRoom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassRoom, @classRooms, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassRoom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Faculty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Faculty, @facultys, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Faculty, "", new { @class = "text-danger" })
            </div>
        </div>      
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
